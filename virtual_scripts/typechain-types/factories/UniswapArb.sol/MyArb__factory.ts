/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { MyArb, MyArbInterface } from "../../UniswapArb.sol/MyArb";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reserveOut",
        type: "uint256",
      },
    ],
    name: "getAmountOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "poolAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "stepType",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
        ],
        internalType: "struct MyArb.Step",
        name: "initStep",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "poolAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "stepType",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
        ],
        internalType: "struct MyArb.Step[]",
        name: "steps",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "input",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fees",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "endStepData",
        type: "bytes",
      },
    ],
    name: "startFlashLoan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV2Call",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "amount0Delta",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "amount1Delta",
        type: "int256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "uniswapV3SwapCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60808060405234602757600080546001600160a01b031916331790556116bb908161002d8239f35b600080fdfe6080604052600436101561001b575b361561001957600080fd5b005b6000803560e01c8063054d50d414610ce757806310d1e85c14610bc857806324600fc314610b4e5780638da5cb5b14610b27578063f3443c98146102395763fa461e3314610069575061000e565b34610236576060366003190112610236576004356001600160401b03602435604435828111610232576100a0903690600401610d28565b8192910160808382031261022e576100b783610d14565b936020956100c6878601610d14565b94604081013593841515850361022a57606082013593841161022a5788936100ee9201610e41565b6001600160a01b039687949091906101ef575b5088821361018c575b50505050848113610119578480f35b839161013d918660405195868095819463a9059cbb60e01b83523360048401610f8d565b0393165af1801561018157610153575b80808480f35b8161017292903d1061017a575b61016a8183610e1e565b810190610f75565b50388061014d565b503d610160565b6040513d85823e3d90fd5b6101ae918960405195868095819463a9059cbb60e01b83523360048401610f8d565b0393165af180156101e4576101c7575b8481859261010a565b6101dd90853d871161017a5761016a8183610e1e565b50386101be565b6040513d88823e3d90fd5b61020481858061021b94518301019101610eab565b8a84121561022157610215846110ac565b90611131565b38610101565b610215876110ac565b8980fd5b8580fd5b8480fd5b80fd5b503461023657366003190161010081126105055760801361023657608435906001600160401b03808311610505573660238401121561050557826004013590808211610514573660248360071b860101116105145760e43590811161051457836102a884923690600401610d28565b914792602435956040518093826040830160208085015252602460608301910192885b818110610ac75750506102e7925003601f198101845283610e1e565b8490600187166109bc57600460606001600160a01b03610305610fa8565b1660405192838092630240bc6b60e21b82525afa9081156109b1578790889261098e575b50969788976001600160701b0392831692169088906002161561097a5750906103549160a435610d78565b6001600160a01b03610364610fa8565b169061036e610fbe565b98610377610fd4565b604080516001600160a01b039c8d16602082015291909b169a81019a909a52608060608b01526103c48a6103ae60a0820189610fea565b60a435608083015203601f1981018c528b610e1e565b823b15610976579161040999918980946040519c8d958694859363022c0d9f60e01b855260048501526024840152306044840152608060648401526084830190610fea565b03925af180156101e457610960575b8596509493945b600160c43516610552575b50506040516370a0823160e01b815230600482015273c02aaa39b223fe8d0a0e5c4f27ead9083c756cc292509050602081602481855afa908115610181578391610518575b50813b15610514578291602483926040519485938492632e1a7d4d60e01b845260048401525af18015610509576104f1575b5080808060c43560801c8181156104e8575b4190f1156104db576104d19060c4356001600160801b031690610d55565b4711156102365780f35b50604051903d90823e3d90fd5b506108fc6104b3565b6104fa90610dda565b6105055781836104a1565b5080fd5b6040513d84823e3d90fd5b8280fd5b9250506020823d60201161054a575b8161053460209383610e1e565b81010312610545578391518561046f565b600080fd5b3d9150610527565b83608091810103126106c5576040519161056b83610e03565b61057484610d14565b83526020840135602084015261058c60408501610d14565b80604085015261059e60608601610d14565b80606086015283156108c0575b5050602083015160011661079757508151604051630240bc6b60e21b81526001600160a01b0392916060908290600490829087165afa9081156101e45786908792610764575b5086956001600160701b03928316929190911690869060200135600216156106f357509161062560209261064e9483610d78565b9484806040830151169151168860405180968195829463a9059cbb60e01b845260048401610f8d565b03925af180156106e8576106c9575b505b610667610fa8565b1691823b156106c5576106959284928360405180968195829463022c0d9f60e01b8452309160048501611107565b03925af18015610509576106b1575b50505b818380808061042a565b6106ba90610dda565b6105055781836106a4565b8380fd5b6106e19060203d60201161017a5761016a8183610e1e565b508661065d565b6040513d87823e3d90fd5b949550916107076107309360209383610d78565b9584806060830151169151168860405180968195829463a9059cbb60e01b845260048401610f8d565b03925af180156106e857610745575b5061065f565b61075d9060203d60201161017a5761016a8183610e1e565b508661073f565b9050610788915060603d606011610790575b6107808183610e1e565b8101906110d1565b5090896105f1565b503d610776565b9293506108249260409250906020850135600216156108a6576401000276a45b876001600160a01b036107c8610fa8565b16926107fd6107d5610fbe565b6107ef6107e0610fd4565b9789519889936020850161102a565b03601f198101875286610e1e565b8551630251596160e31b81529687958694859360208c013560021615153060048701611073565b03925af191821561089b578491859361085f575b506020013560021615610855575061084f906110ac565b506106a7565b61084f91506110ac565b6002919350602092506108899060403d604011610894575b6108818183610e1e565b81019061105d565b929092939150610838565b503d610877565b6040513d86823e3d90fd5b73fffd8963efd1fc6a506488495d951d5263988d256107b7565b91925060249160209190868301356002161561095057506001600160a01b03165b6040516370a0823160e01b815230600482015292839182906001600160a01b03165afa9081156106e857859161091b575b509087806105ab565b9450506020843d602011610948575b8161093760209383610e1e565b810103126105455785935187610912565b3d915061092a565b6001600160a01b031690506108e1565b9394909561096d90610dda565b93928590610418565b8880fd5b98506109889160a435610d78565b96610354565b90506109a9915060603d606011610790576107808183610e1e565b509089610329565b6040513d89823e3d90fd5b9495939486949091506002811615610aa857610a4660406401000276a45b6001600160a01b036109ea610fa8565b166109f3610fbe565b91610a206109ff610fd4565b93610a128a87519687936020850161102a565b03601f198101855284610e1e565b898451809681958294630251596160e31b845260a43560028c1615153060048701611073565b03925af19182156101e45786918793610a82575b5060021615610a735750610a6d906110ac565b9061041f565b610a7d91506110ac565b610a6d565b610aa09193506002925060403d604011610894576108818183610e1e565b929091610a5a565b610a46604073fffd8963efd1fc6a506488495d951d5263988d256109da565b9092509060019060809081906001600160a01b0380610ae589610d14565b1682526020880135602083015280610aff60408a01610d14565b166040830152610b1160608901610d14565b16606082015201940191019185929391936102cb565b5034610236578060031936011261023657546040516001600160a01b039091168152602090f35b503461023657806003193601126102365780546001600160a01b031633819003610b9f5781808080934790828215610b96575bf115610b8a5780f35b604051903d90823e3d90fd5b506108fc610b81565b60405162461bcd60e51b81526020600482015260016024820152606f60f81b6044820152606490fd5b5034610236576080366003190112610236576001600160a01b0360043581811603610505576001600160401b039060243560443560643584811161022e57610c14903690600401610d28565b8192910194608083870312610ce357610c2c83610d14565b93602096610c3b888601610d14565b92604086013590811161022a576060610c5c610c7e93610c6e938901610e41565b96013595898082518301019101610eab565b821580159390610cdb5790611131565b610c8c575b50610119578480f35b85604051809263a9059cbb60e01b8252818a8982610cae8a3360048401610f8d565b0393165af180156109b15715610c8357610cd490863d881161017a5761016a8183610e1e565b5038610c83565b508490611131565b8680fd5b5034610236576060366003190112610236576020610d0c604435602435600435610d78565b604051908152f35b35906001600160a01b038216820361054557565b9181601f84011215610545578235916001600160401b038311610545576020838186019501011161054557565b91908201809211610d6257565b634e487b7160e01b600052601160045260246000fd5b6103e580820291808304821481151715610d6257840202928184041481151715610d62576103e891828102928184041490151715610d6257610db991610d55565b908115610dc4570490565b634e487b7160e01b600052601260045260246000fd5b6001600160401b038111610ded57604052565b634e487b7160e01b600052604160045260246000fd5b608081019081106001600160401b03821117610ded57604052565b601f909101601f19168101906001600160401b03821190821017610ded57604052565b81601f82011215610545578035906001600160401b038211610ded5760405192610e75601f8401601f191660200185610e1e565b8284526020838301011161054557816000926020809301838601378301015290565b51906001600160a01b038216820361054557565b602080828403126105455781516001600160401b039283821161054557019083601f83011215610545578151928311610ded5760409260405194610ef4838360051b0187610e1e565b818652828087019260071b85010193818511610545578301915b848310610f1e5750505050505090565b60808383031261054557836080918751610f3781610e03565b610f4086610e97565b81528286015183820152610f55898701610e97565b898201526060610f66818801610e97565b90820152815201920191610f0e565b90816020910312610545575180151581036105455790565b6001600160a01b039091168152602081019190915260400190565b6004356001600160a01b03811681036105455790565b6044356001600160a01b03811681036105455790565b6064356001600160a01b03811681036105455790565b919082519283825260005b848110611016575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610ff5565b6001600160a01b039182168152911660208201526001604082015260806060820181905261105a92910190610fea565b90565b9190826040910312610545576020825192015190565b6001600160a01b039182168152911515602083015260408201929092529116606082015260a06080820181905261105a92910190610fea565b600160ff1b8114610d625760000390565b51906001600160701b038216820361054557565b90816060910312610545576110e5816110bd565b9160406110f4602084016110bd565b92015163ffffffff811681036105455790565b9160a0939183526020830152600180841b0316604082015260806060820152600060808201520190565b919060005b835181101561167f576020808260051b86010151928184015190600160028316151592161560001461144657845160408051630240bc6b60e21b81529094600494926001600160a01b0392606091829082908990829088165afa908115611311576000908192611425575b5060018060701b038091169116916000968b8891809860001461131c575050505084156112a4575b6111d861120092849287610d78565b9484898c015116858c511660008a8c519687958694859363a9059cbb60e01b85528401610f8d565b03925af180156112995761127b575b50505b600096511691823b15610ce3579184939187809461124597519788958694859363022c0d9f60e01b855230928501611107565b03925af190811561127257509060019291611263575b505b01611136565b61126c90610dda565b3861125b565b513d85823e3d90fd5b8161129192903d1061017a5761016a8183610e1e565b50388061120f565b87513d6000823e3d90fd5b935060248284898c0151168951928380926370a0823160e01b8252308c8301525afa908115611311579083916000916112e1575b509490506111c9565b9182813d831161130a575b6112f68183610e1e565b8101031261023657505182906112006112d8565b503d6112ec565b88513d6000823e3d90fd5b98838795969289949a959b15611398575b5050506113649461133e9184610d78565b978c015116858c511660008a8c519687958694859363a9059cbb60e01b85528401610f8d565b03925af180156112995761137a575b5050611212565b8161139092903d1061017a5761016a8183610e1e565b503880611373565b6024949295509592950151168b51928380926370a0823160e01b82528d30908301525afa91821561141a5791869183879594926113df575b5090929050611364898e61132d565b9250848194969592503d8311611413575b6113fa8183610e1e565b810103126102365750519091839185908461133e6113d0565b503d6113f0565b8a51903d90823e3d90fd5b905061143e9150823d8411610790576107808183610e1e565b5090386111a1565b93959493908115611577575b801561155c576401000276a4925b60018060a01b03928389511691600060409a868c8201511696606080920151168c519760a0948901528c880152860152608080860152600081860152845260c0948585019285841060018060401b03851117610ded578360008c94886114de818597868a52630251596160e31b875260bf19948c3060c48501611073565b0301925af1938415611311576001959697986000948596611524575b50505050600014611515575061150f906110ac565b9161125d565b61151f91506110ac565b61150f565b9080929394965061154a9550913d10611554575b6115428285610e1e565b01019061105d565b91388080806114fa565b3d9150611538565b73fffd8963efd1fc6a506488495d951d5263988d2592611460565b9050600081156115fe575060408681015181516370a0823160e01b8152306004820152908490829060249082906001600160a01b03165afa9182156115f457506000916115c7575b505b90611452565b908382813d83116115ed575b6115dd8183610e1e565b81010312610236575051386115bf565b503d6115d3565b513d6000823e3d90fd5b6060870151604080516370a0823160e01b8152306004820152909290918590839060249082906001600160a01b03165afa92831561167557508092611645575b50506115c1565b9091508382813d831161166e575b61165d8183610e1e565b81010312610236575051388061163e565b503d611653565b51903d90823e3d90fd5b5050905056fea2646970667358221220fe64d7d19cb01ec7518f5d9ada8e6f695abdfec1ea24e4b26f341893e8d666c564736f6c63430008190033";

type MyArbConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyArbConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyArb__factory extends ContractFactory {
  constructor(...args: MyArbConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MyArb & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MyArb__factory {
    return super.connect(runner) as MyArb__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyArbInterface {
    return new Interface(_abi) as MyArbInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MyArb {
    return new Contract(address, _abi, runner) as unknown as MyArb;
  }
}
